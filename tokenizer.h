/**
 *****************************************************************************
 * @brief   basic interpreter
 * @author  onyettr
 * @file    tokenizer.h
 ***************************************************************************** 
 */
#ifndef __TOKENIZER__H__
#define __TOKENIZER__H__

/*
******************************************************************************
Includes
******************************************************************************
*/

/*
******************************************************************************
Private Types
*****************************************************************************
*/
typedef enum {
    TOKEN_WORD,
    TOKEN_DIGIT,
    TOKEN_LETTER,
    TOKEN_SPECIAL,
    TOKEN_ERROR
} TokenValues_t;

typedef int32_t Token_t;
  
/*
******************************************************************************
Private variables (static)
******************************************************************************
*/

/*
******************************************************************************
Global variables
******************************************************************************
*/

/*
******************************************************************************
Exported Global variables
******************************************************************************
*/

/*
******************************************************************************
Prototypes of all functions contained in this file (in order of occurance)
******************************************************************************
*/
int32_t Tokenize (char *FileName);

#endif  /* __TOKENIZER_H__ */
